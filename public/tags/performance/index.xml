<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>performance on Debaditya Tech Journal</title>
    <link>/tags/performance/</link>
    <description>Recent content in performance on Debaditya Tech Journal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 26 Jul 2020 16:30:42 -0400</lastBuildDate>
    
	<atom:link href="/tags/performance/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vertical vs Horizontal Scaling</title>
      <link>/system-design/verticalhorizaonal/</link>
      <pubDate>Sun, 26 Jul 2020 16:30:42 -0400</pubDate>
      
      <guid>/system-design/verticalhorizaonal/</guid>
      <description>Nutshell  Horizontal scaling means that we scale by adding more machines into pool of resources Vertical scaling means that we scale by adding more power (CPU, RAM) to an existing machine.  High level difference   Real world implementation Take the benfits of both Horizontal and Vertical scaling
 Vertical scaling : Inter process communication and data consistency Horizontal scaling : Scalability and Resilient (no single point of failure)  Ideal way - First have the veritical scaling (optimal level) and scale horizontally.</description>
    </item>
    
    <item>
      <title>What is Caching and its importance</title>
      <link>/system-design/caching/</link>
      <pubDate>Sun, 19 Jul 2020 22:20:15 -0400</pubDate>
      
      <guid>/system-design/caching/</guid>
      <description>3 Main use-case of Cache  Avoid Network calls Avoid repeated computation Avoid load on Database / System  Why not use cache every time  Hardware where Cache runs are mainly in SSDs which are expensive More data in Cache will increase the search time - so it will make cache data retrieval slower  Cache Policy The way we decide to load or evict data from cache is called Cache policy</description>
    </item>
    
    <item>
      <title>Load Balancer</title>
      <link>/system-design/loadbalance/</link>
      <pubDate>Thu, 16 Jul 2020 20:54:54 -0400</pubDate>
      
      <guid>/system-design/loadbalance/</guid>
      <description>Definition Load Balancing is the process of re-distributing network traffic across multiple server.
  What Load Balancers can perform ?  Detect server failures and redirect client traffic automatically/ Provide automated disaster recovery to backup sites Add and remove application servers without disruption Monitor and block malicious content  Load Balance Algorithms (remember as CRRI) There is a variety of load balancing methods, which use different algorithms best suited for a particular situation.</description>
    </item>
    
  </channel>
</rss>