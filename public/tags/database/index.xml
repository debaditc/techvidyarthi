<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>database on Debaditya Tech Journal</title>
    <link>/tags/database/</link>
    <description>Recent content in database on Debaditya Tech Journal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 19 Aug 2020 21:22:43 -0400</lastBuildDate>
    
	<atom:link href="/tags/database/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CAP Theorem</title>
      <link>/system-design/captheorem/</link>
      <pubDate>Wed, 19 Aug 2020 21:22:43 -0400</pubDate>
      
      <guid>/system-design/captheorem/</guid>
      <description>About CAP Theorem It is also known as Brewer&amp;rsquo;s theorem after computer scientist Eric Brewer.
Simple terms It states no distributed data store can provide more than 2 out of 3 gurantees
  Consistency : Every client views the same data. Every node in distributed cluster recieves same data.
  Availability : During node failure time, every node must respond in a reasonable amount of time.
  Partition tolerance : Gurantees partition tolerance can recover from partitions once the partition heals.</description>
    </item>
    
    <item>
      <title>Database Sharding</title>
      <link>/system-design/installation/</link>
      <pubDate>Sun, 16 Aug 2020 15:47:23 -0400</pubDate>
      
      <guid>/system-design/installation/</guid>
      <description>Simple definition Process of making paritions of data in database
Vertical and Horizontal Sharding Let us understand using simple example
Table   Veritical Sharding   Horizontal Sharding Sharding is performed on the basis of salary.
 Horizontal Shard1 = salary &amp;lt; 100000 Horizontal Shard2 = salary &amp;gt; 100000 AND salary &amp;lt; 250000 Horizontal Shard3 = salary &amp;gt; 250000    Benefits of Sharding  Improves the efficiency of queries Sharding results to small logical table which makes query faster Read and write performance increases  Problems with Sharding  Joining data across shards is expensive process as the join happens across the network Too many shards is a problem and increase the overhead  What happens the shard fails ?</description>
    </item>
    
  </channel>
</rss>